var clipdropImage = document.getElementById('fileClipDrop');
let acno = document.getElementById("acno").value;
["drag", "dragstart", "dragend", "dragover", "dragenter", "dragleave", "drop"].forEach((function (r) { clipdropImage.addEventListener(r, (function (r) { r.preventDefault(), r.stopPropagation() })) }));
clipdropImage.addEventListener("dragover", (function () { clipdropImage.classList.add("active") }));
clipdropImage.addEventListener("dragleave", (function () { clipdropImage.classList.remove("active") }));
clipdropImage.addEventListener("drop", (function (e) { e.preventDefault(), e.stopPropagation(), clipdropImage.classList.remove("active"); var a = e.dataTransfer.files; clipDropFunction(a) }));
clipdropImage.addEventListener("click", (function () { document.getElementById("fileInput").click() }));
document.getElementById("fileInput").addEventListener("change", (function () { var e = this.files; clipDropFunction(e) }));
let clipDropFunction = (files) => {
    let photo = files[0];
    // Image size limit validation
    let fileSize = photo.size;
    let maxSize = 1 * 1024 * 1024;
    if (fileSize > maxSize) {
        Notification('danger', 'Error', "Image is too large, kindly upload atleast <b>1mb</b> image size");
        return false;
    }
    // Image extension validation
    let allowedExtensions = ['.jpg', '.jpeg', '.png'];
    let fileName = photo.name;
    let fileExtension = fileName.substring(fileName.lastIndexOf('.')).toLowerCase();
    if (!allowedExtensions.includes(fileExtension)) {
        Notification('danger', 'Error', "Only uploads image file");
        return false;
    }
    document.querySelector(".loading-message").classList.remove("d-none");
    document.querySelector(".clipDropImage-message").style.display = "none";
    let form = new FormData();
    form.append('image_file', photo);
    let shouldRemoveBg = document.getElementById("removeBgCheckbox").checked, shouldRemoveText = document.getElementById("removeTextCheckbox").checked, apiUrl = shouldRemoveBg ? "remove-background" : shouldRemoveText ? "remove-text" : null;
    if (apiUrl) {
        callClipDropAPI(apiUrl);
    }
    else {
        fetch('/uploads/upload', {
            method: 'POST',
            body: form,
        })
            .then(response => response.text())
            .then(result => {
                "sizeerror" == result ? Notification("danger", "Error", " Image is too large, kindly upload atleast <b>1mb</b> image size") : "permisionerror" == result && Notification("danger", "Error", " Network Error");
                Notification('success', 'Success', "Image Upload Successfull");
                document.getElementById("upload_image").value = result, document.getElementById("clip_drop_image").classList.remove("d-none"), document.querySelector(".loading-message").style.display = "none", document.getElementById("clip_drop_image").src = `/uploads/${acno}/${result}`;
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
    function callClipDropAPI(content) {
        fetch(`https://clipdrop-api.co/${content}/v1`, {
            method: 'POST',
            headers: {
                'x-api-key': 'bf1fcfe67c6fde52d36b34ae1acffbcec05514ef3be0a2a335481cf24fc8772e6b34df2573d7346a796cf7bd28519902', // Clip Drop API Key
            },
            body: form,
        })
            .then(response => response.blob())
            .then(blob => {
                let formData = new FormData();
                formData.append('image_file', blob, `${fileName}`);
                fetch('/uploads/upload', {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => response.text())
                    .then(result => {
                        "sizeerror" == result ? Notification("danger", "Error", " Image is too large, kindly upload atleast <b>1mb</b> image size") : "permisionerror" == result && Notification("danger", "Error", " Network Error!");
                        (content == 'remove-background') ? Notification('success', 'Success', "Background Remove Successfull") : Notification('success', 'Success', "Text Remove Successfull");
                        document.getElementById("upload_image").value = result, document.getElementById("clip_drop_image").classList.remove("d-none"), document.querySelector(".loading-message").style.display = "none", document.getElementById("clip_drop_image").src = `/uploads/${acno}/${result}`;
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
}